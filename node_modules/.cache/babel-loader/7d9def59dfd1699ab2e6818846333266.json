{"remainingRequest":"D:\\Source Code dan Latihan\\samsan\\node_modules\\babel-loader\\lib\\index.js!D:\\Source Code dan Latihan\\samsan\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\Source Code dan Latihan\\samsan\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Source Code dan Latihan\\samsan\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\Source Code dan Latihan\\samsan\\src\\App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"D:\\Source Code dan Latihan\\samsan\\src\\App.vue","mtime":1608382770871},{"path":"D:\\Source Code dan Latihan\\samsan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Source Code dan Latihan\\samsan\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Source Code dan Latihan\\samsan\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1607095271000},{"path":"D:\\Source Code dan Latihan\\samsan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Source Code dan Latihan\\samsan\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1607095271000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbWVyZ2VQcm9wcyBhcyBfbWVyZ2VQcm9wcywgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKCnZhciBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiY2FudmFzIiwgewogIGlkOiAiYyIsCiAgd2lkdGg6ICI2NDAiLAogIGhlaWdodDogIjQ4MCIsCiAgc3R5bGU6IHsKICAgICJwb3NpdGlvbiI6ICJmaXhlZCIsCiAgICAidG9wIjogIjUwcHgiCiAgfQp9LCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgbnVsbCwgW19jcmVhdGVWTm9kZSgidmlkZW8iLCBfbWVyZ2VQcm9wcyh7CiAgICBhdXRvcGxheTogIiIsCiAgICBtdXRlZDogIiIsCiAgICBwbGF5c0lubGluZTogIiIKICB9LCAkc2V0dXAuY2FtZXJhLCB7CiAgICB3aWR0aDogIjY0MCIsCiAgICBoZWlnaHQ6ICI0ODAiLAogICAgaWQ6ICJjYW0iLAogICAgc3R5bGU6IHsKICAgICAgInBvc2l0aW9uIjogImZpeGVkIiwKICAgICAgInRvcCI6ICI1MHB4IgogICAgfQogIH0pLCBudWxsLCAxNgogIC8qIEZVTExfUFJPUFMgKi8KICApLCBfaG9pc3RlZF8xXSk7Cn0="},{"version":3,"sources":["D:\\Source Code dan Latihan\\samsan\\src\\App.vue"],"names":[],"mappings":";;8BAYI,YAAA,CAKE,QALF,EAKE;AAJA,EAAA,EAAE,EAAC,GAIH;AAHA,EAAA,KAAK,EAAC,KAGN;AAFA,EAAA,MAAM,EAAC,KAEP;AADA,EAAA,KAA+B,EAA/B;AAAA,gBAAA,OAAA;AAAA,WAAA;AAAA;AACA,CALF,E,IAAA,E;;AAAA,C;;;uBAXF,YAAA,CAiBM,KAjBN,EAiBM,IAjBN,EAiBM,CAhBJ,YAAA,CASE,OATF,EAAA,WAAA,CASE;AARA,IAAA,QAAQ,EAAR,EAQA;AAPA,IAAA,KAAK,EAAL,EAOA;AANA,IAAA,WAAW,EAAX;AAMA,GATF,EAIU,MAAA,CAAA,MAJV,EAIgB;AACd,IAAA,KAAK,EAAC,KADQ;AAEd,IAAA,MAAM,EAAC,KAFO;AAGd,IAAA,EAAE,EAAC,KAHW;AAId,IAAA,KAA+B,EAA/B;AAAA,kBAAA,OAAA;AAAA,aAAA;AAAA;AAJc,GAJhB,CAAA,E,IAAA,E;;AAAA,GAgBI,EANJ,UAMI,CAjBN,C","sourcesContent":["<template>\r\n  <div>\r\n    <video\r\n      autoplay\r\n      muted\r\n      playsInline\r\n      v-bind=\"camera\"\r\n      width=\"640\"\r\n      height=\"480\"\r\n      id=\"cam\"\r\n      style=\"position:fixed;top:50px\"\r\n    />\r\n    <canvas\r\n      id=\"c\"\r\n      width=\"640\"\r\n      height=\"480\"\r\n      style=\"position:fixed;top:50px\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '@tensorflow/tfjs';\r\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\r\nimport { reactive, onMounted } from 'vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  setup(){\r\n    const camera = reactive({\r\n      srcObject : null,\r\n    });\r\n\r\n    const constraint = {\r\n      audio : false,\r\n      video : true\r\n    }\r\n\r\n    const webcam = async() => {\r\n      try{\r\n        camera.srcObject = await navigator.mediaDevices.getUserMedia(constraint);\r\n        await camera.onloadedmetadata;\r\n      }\r\n      catch(e)\r\n      {\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    const load = async() => {\r\n      try{\r\n        await webcam();\r\n        const loadModel = await cocoSsd.load({base:\"mobilenet_v2\"});\r\n        const cam = document.getElementById('cam');\r\n        detectFromVideoFrame(loadModel, cam);\r\n      }\r\n      catch(e)\r\n      {\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    const detectFromVideoFrame = (model, video) => {\r\n      model.detect(video).then(predictions=>{\r\n        showDetection(predictions);\r\n        requestAnimationFrame(()=>{\r\n          detectFromVideoFrame(model, video);\r\n        });\r\n      }, (error)=>{\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const showDetection = prediction => {\r\n      const c = document.getElementById(\"c\");\r\n      const ctx = c.getContext(\"2d\");\r\n      ctx.clearRect(0,0, ctx.canvas.width, ctx.canvas.height );\r\n      const font = \"24px helvetica\";\r\n      ctx.font = font;\r\n      ctx.textBaseline = \"top\";\r\n\r\n      prediction.forEach(prediction=>{\r\n        const x = prediction.bbox[0];\r\n        const y = prediction.bbox[1];\r\n        const width = prediction.bbox[2];\r\n        const height = prediction.bbox[3];\r\n\r\n        ctx.strokeStyle = \"#2fff00\";\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeRect(x,y,width,height);\r\n\r\n        ctx.fillStyle=\"#2fff00\";  \r\n\r\n        let predictionText = prediction.class;\r\n        // if(predictionText==\"person\")\r\n        // {\r\n        //   predictionText=\"orang\";\r\n        //   alert(\"orang ganteng\");\r\n        // }\r\n\r\n        const textWidth = ctx.measureText(predictionText).width;\r\n        const textHeight = parseInt(font, 10);\r\n\r\n        ctx.fillRect(x,y,textWidth+10, textHeight+10);\r\n        ctx.fillRect(x,y+height-textHeight,textWidth+15, textHeight+10);\r\n\r\n        ctx.fillStyle=\"#000000\";\r\n        ctx.fillText(predictionText,x,y);\r\n        ctx.fillText(prediction.score.toFixed(2),x,y+height-textHeight);\r\n      });\r\n    }\r\n\r\n    onMounted(()=>{\r\n      if(navigator.mediaDevices.getUserMedia||navigator.mediaDevices.webkitGetUserMedia)\r\n      {\r\n        load();\r\n      }else{\r\n        alert(\"not supported\");\r\n      }\r\n    });\r\n\r\n    return{\r\n      camera,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n"],"sourceRoot":""}]}